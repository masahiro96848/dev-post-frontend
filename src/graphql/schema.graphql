scalar Date

type User {
  id: ID
  email: String
  name: String
  created_at: Date
  updated_at: Date
}

type Post {
  id: ID
  title: String!
  body: String
  imageUrl: String
  isPublished: Int
  uid: String!
  user: User!
  createdAt: Date
  updatedAt: Date
}

type Query {
  viewer: User!
  posts: [Post!]!
  postDetail(uid: String!, name: String!): Post! 
  myPosts: [Post!]!
}

input SigninInput {
  email: String!
  password: String!
}

input SignupInput {
  email: String!
  password: String!
  passwordConfirmation: String!
}

input SignoutInput {
  userId: String
}

input PostEditInput {
  title: String!
  body: String
  imageUrl: String
  isPublished: Int!
  uid: String!
}

type Mutation {
  signin(input: SigninInput!): SigninPayload
  signup(input: SignupInput!): SignupPayload
  signout(input: SignoutInput!): Boolean!
  postEdit(input: PostEditInput!): PostEditPayload!
}

type SigninPayload {
  user: User
  errors: [String!]
}

type SignupPayload {
  user: User
  errors: [String!]
}

type PostEditPayload {
  post: Post
  errors: [String!]
}