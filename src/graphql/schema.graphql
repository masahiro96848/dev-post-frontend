type User {
  id: ID
  email: String
  name: String
  created_at: String
  updated_at: String
}

type Post {
  id: ID
  title: String!
  body: String
  imageUrl: String
  isPublished: Boolean!
  uid: String!
  user: User!
  createdAt: String
  updatedAt: String
}

type Query {
  viewer: User!
  posts: [Post!]!
}

input SigninInput {
  email: String!
  password: String!
}

input SignupInput {
  email: String!
  password: String!
  passwordConfirmation: String!
}

input SignoutInput {
  userId: String
}

type Mutation {
  signin(input: SigninInput!): SigninPayload
  signup(input: SignupInput!): SignupPayload
  signout(input: SignoutInput!): Boolean!
}

type SigninPayload {
  user: User
  errors: [String!]
}

type SignupPayload {
  user: User
  errors: [String!]
}